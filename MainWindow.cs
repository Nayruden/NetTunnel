using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace NetTunnel
{
    public partial class MainWindow : Form
    {
        public MainWindow()
        {
            InitializeComponent();
            channelsLB.Items.Add(LobbyPage.Text); // Init list box

            // Populate with a few values
            servicesLB.Items.Add( KnownServices.get( "Apache" ) );
            servicesLB.Items.Add( KnownServices.get( "Ventrilo" ) );
        }

        public void addService(object service)
        {
            servicesLB.Items.Add(service);
        }

        public void removeService(object service)
        {
            servicesLB.Items.Remove(service);
        }

        private void servicesLB_SelectedIndexChanged(object sender, EventArgs e)
        {
            for ( int i = 0; i < servicesLB.Items.Count; i++ )
            {
                //channelsLB.SetSelected(1, true);
            }
        }

        private void sendButton_Click(object sender, EventArgs e)
        {
            if (chatBox.TextLength == 0)
                return;
 
            var s = "[{0}] {1}: {2}\n".F(DateTime.Now.ToShortTimeString(), nickBox.Text, chatBox.Text);
            chatHistory.AppendText(s);
            chatBox.ResetText();
        }

        private void chatBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == '\r')
            {
                sendButton_Click(sender, null); // Reroute
                e.Handled = true; // Otherwise it beeps at us
                return;
            }
        }

        private void joinButton_Click(object sender, EventArgs e)
        {
            if (joinBox.TextLength == 0)
                return;

            var channel = joinBox.Text;
            joinBox.ResetText();

            var page = chatTabControl.TabPages.Cast<TabPage>().FirstOrDefault(p => p.Text.ToLower() == channel.ToLower());
            if (page == null)
            { // Doesn't exist, create it
                // Code copied from autogenerated lobby page code
                page = new TabPage();
                chatTabControl.TabPages.Add(page);                
                page.Location = new System.Drawing.Point(4, 22);
                page.Padding = new System.Windows.Forms.Padding(3);
                page.Size = new System.Drawing.Size(846, 676);
                page.TabIndex = 0;
                page.Text = channel;
                page.UseVisualStyleBackColor = true;

                channelsLB.Items.Add(channel);
            }

            chatTabControl.SelectedTab = page;
        }

        private void joinBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == '\r')
            {
                joinButton_Click(sender, null); // Reroute
                e.Handled = true; // Otherwise it beeps at us
                return;
            }
        }

        private void chatTabControl_SelectedIndexChanged(object sender, EventArgs e)
        {
            var page = chatTabControl.SelectedTab;
            page.Controls.Add(this.splitContainer2);
            leaveChannelButton.Enabled = page != LobbyPage; // Enable if not lobby
        }

        private void leaveChannelButton_Click(object sender, EventArgs e)
        {
            var page = chatTabControl.SelectedTab;
            if (page == LobbyPage) return; // Don't let them leave

            channelsLB.Items.Remove(page.Text);
            chatTabControl.TabPages.Remove(page);
        }

        private void newServiceButton_Click(object sender, EventArgs e)
        {
            var serviceWindow = new ServiceWindow( this, null );
            serviceWindow.Show();
        }

        private void deleteServiceButton_Click(object sender, EventArgs e)
        {
            if (servicesLB.SelectedItem == null)
            {
                MessageBox.Show("You must select an item first");
                return;
            }

            servicesLB.Items.Remove(servicesLB.SelectedItem);
        }

        private void editServiceButton_Click(object sender, EventArgs e)
        {
            if (servicesLB.SelectedItem == null)
            {
                MessageBox.Show("You must select an item first");
                return;
            }

            var serviceWindow = new ServiceWindow(this,  (Service)servicesLB.SelectedItem);
            serviceWindow.Show();
        }
    }
}
